{"ast":null,"code":"var _jsxFileName = \"/Users/parth/Local Space 01/Portalproject/src/components/feedback/ApologyButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from '../ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApologyButton = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const playApologySong = () => {\n    if (typeof AudioContext !== \"undefined\" || typeof webkitAudioContext !== \"undefined\") {\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n      // Create a simple melody\n      const notes = [523.25, 587.33, 659.25, 698.46, 783.99]; // C, D, E, F, G\n\n      notes.forEach((freq, index) => {\n        const oscillator = audioContext.createOscillator();\n        const gainNode = audioContext.createGain();\n        oscillator.connect(gainNode);\n        gainNode.connect(audioContext.destination);\n        oscillator.frequency.setValueAtTime(freq, audioContext.currentTime + index * 0.3);\n        oscillator.type = 'sine';\n        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime + index * 0.3);\n        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + index * 0.3 + 0.25);\n        oscillator.start(audioContext.currentTime + index * 0.3);\n        oscillator.stop(audioContext.currentTime + index * 0.3 + 0.25);\n      });\n    }\n    setIsPlaying(true);\n    setTimeout(() => {\n      setIsPlaying(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: playApologySong,\n    variant: \"secondary\",\n    children: isPlaying ? 'ðŸŽµ Playing... ðŸŽµ' : 'ðŸŽµ Play Apology Song'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ApologyButton, \"dxr5RgzQJlMZkbQdHY9iHZ+FF0w=\");\n_c = ApologyButton;\nexport default ApologyButton;\nvar _c;\n$RefreshReg$(_c, \"ApologyButton\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","ApologyButton","_s","isPlaying","setIsPlaying","playApologySong","AudioContext","webkitAudioContext","audioContext","window","notes","forEach","freq","index","oscillator","createOscillator","gainNode","createGain","connect","destination","frequency","setValueAtTime","currentTime","type","gain","exponentialRampToValueAtTime","start","stop","setTimeout","onClick","variant","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parth/Local Space 01/Portalproject/src/components/feedback/ApologyButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '../ui';\n\nconst ApologyButton = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const playApologySong = () => {\n    if (typeof AudioContext !== \"undefined\" || typeof webkitAudioContext !== \"undefined\") {\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      \n      // Create a simple melody\n      const notes = [523.25, 587.33, 659.25, 698.46, 783.99]; // C, D, E, F, G\n      \n      notes.forEach((freq, index) => {\n        const oscillator = audioContext.createOscillator();\n        const gainNode = audioContext.createGain();\n        \n        oscillator.connect(gainNode);\n        gainNode.connect(audioContext.destination);\n        \n        oscillator.frequency.setValueAtTime(freq, audioContext.currentTime + index * 0.3);\n        oscillator.type = 'sine';\n        \n        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime + index * 0.3);\n        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + index * 0.3 + 0.25);\n        \n        oscillator.start(audioContext.currentTime + index * 0.3);\n        oscillator.stop(audioContext.currentTime + index * 0.3 + 0.25);\n      });\n    }\n    \n    setIsPlaying(true);\n    setTimeout(() => {\n      setIsPlaying(false);\n    }, 2000);\n  };\n\n  return (\n    <Button \n      onClick={playApologySong} \n      variant=\"secondary\"\n    >\n      {isPlaying ? 'ðŸŽµ Playing... ðŸŽµ' : 'ðŸŽµ Play Apology Song'}\n    </Button>\n  );\n};\n\nexport default ApologyButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,OAAOC,YAAY,KAAK,WAAW,IAAI,OAAOC,kBAAkB,KAAK,WAAW,EAAE;MACpF,MAAMC,YAAY,GAAG,KAAKC,MAAM,CAACH,YAAY,IAAIG,MAAM,CAACF,kBAAkB,EAAE,CAAC;;MAE7E;MACA,MAAMG,KAAK,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;;MAExDA,KAAK,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC7B,MAAMC,UAAU,GAAGN,YAAY,CAACO,gBAAgB,CAAC,CAAC;QAClD,MAAMC,QAAQ,GAAGR,YAAY,CAACS,UAAU,CAAC,CAAC;QAE1CH,UAAU,CAACI,OAAO,CAACF,QAAQ,CAAC;QAC5BA,QAAQ,CAACE,OAAO,CAACV,YAAY,CAACW,WAAW,CAAC;QAE1CL,UAAU,CAACM,SAAS,CAACC,cAAc,CAACT,IAAI,EAAEJ,YAAY,CAACc,WAAW,GAAGT,KAAK,GAAG,GAAG,CAAC;QACjFC,UAAU,CAACS,IAAI,GAAG,MAAM;QAExBP,QAAQ,CAACQ,IAAI,CAACH,cAAc,CAAC,GAAG,EAAEb,YAAY,CAACc,WAAW,GAAGT,KAAK,GAAG,GAAG,CAAC;QACzEG,QAAQ,CAACQ,IAAI,CAACC,4BAA4B,CAAC,IAAI,EAAEjB,YAAY,CAACc,WAAW,GAAGT,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;QAE/FC,UAAU,CAACY,KAAK,CAAClB,YAAY,CAACc,WAAW,GAAGT,KAAK,GAAG,GAAG,CAAC;QACxDC,UAAU,CAACa,IAAI,CAACnB,YAAY,CAACc,WAAW,GAAGT,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;MAChE,CAAC,CAAC;IACJ;IAEAT,YAAY,CAAC,IAAI,CAAC;IAClBwB,UAAU,CAAC,MAAM;MACfxB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEJ,OAAA,CAACF,MAAM;IACL+B,OAAO,EAAExB,eAAgB;IACzByB,OAAO,EAAC,WAAW;IAAAC,QAAA,EAElB5B,SAAS,GAAG,kBAAkB,GAAG;EAAsB;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEb,CAAC;AAACjC,EAAA,CA1CID,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}